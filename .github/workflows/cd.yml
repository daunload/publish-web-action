name: Merge Preview Screenshot

on:
    pull_request:
        types: [closed]
jobs:
    screenshot:
        if: ${{ github.event.pull_request.merged == true }}
        runs-on: ubuntu-latest
        permissions:
            contents: read
            issues: write
            pull-requests: write
        steps:
            - name: Checkout merged code
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.pull_request.merge_commit_sha }}

            - name: Install pnpm
              run: npm install -g pnpm@9

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version-file: '.nvmrc'
                  cache: pnpm

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Build for production
              run: pnpm build

            - name: Start web server
              run: |
                  nohup pnpm preview & npx wait-on http://localhost:4173

            - name: error logs
              run: |
                  node <<'EOF'
                  import fs from 'fs';
                  import puppeteer from 'puppeteer';

                  (async () => {
                    const browser = await puppeteer.launch({ args: ['--no-sandbox'] });
                    const page = await browser.newPage();

                    const errs = [];

                    page.on('pageerror', e => {
                      errs.push(`üõë Uncaught exception: ${e.message}`);
                    });

                    page.on('console', msg => {
                      if (msg.type() === 'error') {
                        errs.push(`üî¥ console.error: ${msg.text()}`);
                      }
                    });

                    page.on('requestfailed', req => {
                      const f = req.failure();
                      errs.push(`‚ùå Request failed: ${req.url()} (${f.errorText})`);
                    });

                    await page.goto('http://localhost:4173', { waitUntil: 'networkidle0' });
                    await page.screenshot({ path: 'preview.png', fullPage: true });
                    await page.waitForTimeout(3000);
                    await browser.close();

                    const out = errs.length
                      ? errs.join('\n')
                      : '‚úÖ No errors detected';
                    fs.writeFileSync('puppeteer-logs.txt', out);
                  })();
                  EOF

            - name: logs on PR
              uses: actions/github-script@v7
              with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                      const fs = require('fs');
                      const logs = fs.readFileSync('puppeteer-logs.txt', 'utf-8');

                      const body = [
                        '### üêõ Puppeteer Error Logs',
                        '```',
                        logs,
                        '```',
                      ].join('\n');

                      await github.rest.issues.createComment({
                        owner: context.repo.owner,
                        repo:  context.repo.repo,
                        issue_number: context.payload.pull_request.number,
                        body,
                      });
